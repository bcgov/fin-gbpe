{
  "version": "2.0.0",
  "tasks": [
    {
      // This starts the database container and performs the Flyway
      // migration to get the database uptodate with the latest changes.
      "label": "Launch and migrate database",
      "type": "shell",
      "command": "podman-compose up -d database-migrations",
      "problemMatcher": []
    },
    {
      // This creates a new temporary container in podman to run clamav.
      "label": "Launch ClamAV",
      "type": "shell",
      "command": "podman run --rm -d -p 3310:3310 clamav/clamav",
      "problemMatcher": []
    },
    {
      // After making changes to the database via Flyway, Run this task to
      // bring all those changes into Prisma to be available in the code.
      "label": "Prisma 'pull' schema from database",
      "type": "npm",
      "script": "pull",
      "options": {
        "cwd": "${workspaceFolder}/backend"
      },
      "dependsOn": [
        "Launch and migrate database"
      ],
      "problemMatcher": []
    },
    {
      // Executes "npm install" in all subdirectories one level deep
      // that contains a package.json.
      "label": "Install all npm packages in parallel",
      "type": "shell",
      "command": "powershell",
      "args": [
        "-NoProfile",
        "-Command",
        "$jobs = @(); Get-ChildItem -Directory | ForEach-Object { $dir = $_.FullName; $packageJsonPath = Join-Path -Path $dir -ChildPath \"package.json\"; if (Test-Path $packageJsonPath) { $jobs += Start-Job -ScriptBlock { param ($dir); Write-Host -ForegroundColor Yellow \"Running 'npm install' in $dir\"; Push-Location $dir; npm install; Pop-Location; } -ArgumentList $dir }}; $jobs | ForEach-Object { $job = $_; $job | Wait-Job; $job | Receive-Job; $job | Remove-Job; }; Write-Host -ForegroundColor Green \"All npm install jobs have completed.\""
      ],
      "problemMatcher": []
    }
  ]
}
