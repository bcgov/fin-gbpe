{{- $secretName := printf "%s" .Release.Name }}
{{- $secretObj := (lookup "v1" "Secret" .Release.Namespace  $secretName ) | default dict }}
{{- $secretData := (get $secretObj "data") | default dict }}
  # set below to existing secret data or generate a random one when not exists
{{- $privateKey := (get $secretData "PRIVATE_KEY") | default (.Values.global.secrets.uiPrivateKey | b64enc) }}
{{- $publicKey := (get $secretData "PUBLIC_KEY") | default (.Values.global.secrets.uiPublicKey | b64enc) }}
{{- $docGenApiKey := (get $secretData "DOC_GEN_API_KEY") | default (randAlphaNum 32 | b64enc) }}
{{- $backendExternalApiKey := (get $secretData "BACKEND_EXTERNAL_API_KEY") | default (randAlphaNum 32 | b64enc) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}
  labels: {{- include "labels" . | nindent 4 }}
data:
  #-- set these below for plain Postgres, for crunchy it is handled by the operator, so needs to be dealt with differently.
  {{- if not .Values.global.crunchyEnabled }}
  POSTGRESQL_PASSWORD: {{ .Values.global.secrets.databasePassword | b64enc | quote }}
  POSTGRES_PASSWORD: {{ .Values.global.secrets.databasePassword | b64enc | quote }}
  POSTGRESQL_USER: {{  .Values.global.secrets.databaseUser | b64enc | quote }}
  POSTGRES_USER: {{  .Values.global.secrets.databaseUser | b64enc | quote }}
  FLYWAY_USER: {{  .Values.global.secrets.databaseUser | b64enc | quote }}
  FLYWAY_PASSWORD: {{ .Values.global.secrets.databasePassword | b64enc | quote }}
  POSTGRESQL_DATABASE: {{  .Values.global.secrets.databaseName | b64enc | quote }}
  POSTGRES_DB: {{  .Values.global.secrets.databaseName | b64enc | quote }}
  {{- end }}
  ADMIN_KEYCLOAK_URL: {{ .Values.global.secrets.adminKeycloakUrl | b64enc | quote }}
  ADMIN_KEYCLOAK_CLIENT_ID: {{ .Values.global.secrets.adminKeycloakClientId | b64enc | quote }} #admin-frontend
  ADMIN_KEYCLOAK_CLIENT_SECRET: {{ .Values.global.secrets.adminKeycloakClientSecret | b64enc | quote }} #admin-frontend
  KEYCLOAK_URL: {{ .Values.global.secrets.keycloakUrl | b64enc | quote }}
  KEYCLOAK_CLIENT_ID: {{ .Values.global.secrets.keycloakClientId | b64enc | quote }} #frontend
  KEYCLOAK_CLIENT_SECRET: {{ .Values.global.secrets.keycloakClientSecret | b64enc | quote }} #frontend
  PRIVATE_KEY: {{ $privateKey | quote }}
  PUBLIC_KEY: {{ $publicKey | quote }}
  BCEID_WS_BASIC_AUTH_PASSWORD: {{ .Values.global.secrets.bceidWsAuthPassword | b64enc | quote }}
  BCEID_WS_BASIC_AUTH_USERNAME: {{ .Values.global.secrets.bceidWsAuthUserName | b64enc | quote }}
  BCEID_WS_ONLINE_SERVICE_ID: {{ .Values.global.secrets.bceidWsOnlineServiceId | b64enc | quote }}
  BCEID_WS_URL: {{ .Values.global.secrets.bceidWsUrl | b64enc | quote }}
  DOC_GEN_API_KEY: {{ $docGenApiKey | quote }}
  EXTERNAL_CONSUMER_API_KEY: {{ .Values.global.secrets.externalConsumerApiKey | b64enc | quote }}
  BACKEND_EXTERNAL_API_KEY: {{ $backendExternalApiKey | quote }}
  CHES_TOKEN_URL: {{ .Values.global.secrets.chesTokenURL | b64enc | quote }}
  CHES_CLIENT_ID: {{ .Values.global.secrets.chesClientID | b64enc | quote }}
  CHES_CLIENT_SECRET: {{ .Values.global.secrets.chesClientSecret | b64enc | quote }}
  CHES_API_URL: {{ .Values.global.secrets.chesAPIURL | b64enc | quote }}
  CHES_EMAIL_RECIPIENTS: {{ .Values.global.secrets.chesEmailRecipients | b64enc | quote }}