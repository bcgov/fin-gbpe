{{- if .Values.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "doc-gen-service.fullname" . }}
  labels:
    {{- include "doc-gen-service.labels" . | nindent 4 }}
spec:
  strategy:
    type: {{ .Values.deploymentStrategy }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "doc-gen-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "doc-gen-service.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
        - name: {{ include "doc-gen-service.fullname" . }}
          persistentVolumeClaim:
            claimName: {{ include "doc-gen-service.fullname" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ include "doc-gen-service.fullname" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "image-registry.openshift-image-registry.svc:5000/{{.Release.Namespace}}/{{ include "doc-gen-service.fullname" . }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: NODE_ENV
              value: production
            - name: IS_RATE_LIMIT_ENABLED
              value: 'true'
            - name: RATE_LIMIT_WINDOW_MS
              value: '60000'
            - name: RATE_LIMIT_LIMIT
              value: '1000'
            - name: LOG_LEVEL
              value: info
            - name: PORT
              value: {{ .Values.service.targetPort | quote }}
            - name: DOC_GEN_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{.Release.Name}}
                  key: DOC_GEN_API_KEY
            - name: TEMPLATE_PATH
              valueFrom:
                configMapKeyRef:
                  key: TEMPLATE_PATH
                  name: {{.Release.Name}}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 30
          livenessProbe:
            successThreshold: 1
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 60
            timeoutSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
