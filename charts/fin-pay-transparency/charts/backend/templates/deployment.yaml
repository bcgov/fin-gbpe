{{- if .Values.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "backend.fullname" . }}
  labels:
    {{- include "backend.labels" . | nindent 4 }}
spec:
  strategy:
    type: {{ .Values.deploymentStrategy }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "backend.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
        - name: {{ include "backend.fullname" . }}
          persistentVolumeClaim:
            claimName: {{ include "backend.fullname" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: {{ include "backend.fullname" . }}-init
          image: "image-registry.openshift-image-registry.svc:5000/{{.Release.Namespace}}/{{ include "backend.fullname" . }}-init:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.initResources | nindent 12 }}
          envFrom:
            - secretRef:
                name: {{.Release.Name}}
          env:
            {{- if .Values.global.crunchyEnabled }}
            #-- "crunchy" as a name is always added to the paths for secrets and pods , because the alias used in chart.yaml is crunchy, refer line #40 in Chart.yaml
            - name: FLYWAY_URL
              value: "jdbc:postgresql://{{.Release.Name}}-crunchy-primary.{{.Release.Namespace}}.svc:5432/{{ .Values.global.secrets.databaseName}}"
            - name: FLYWAY_USER
              value: {{ .Values.global.secrets.databaseUser }}
            - name: FLYWAY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{.Release.Name}}-crunchy-pguser-{{ .Values.global.secrets.databaseUser }}
                  key: password
            {{- else }}
            - name: FLYWAY_URL
              value: "jdbc:postgresql://{{.Release.Name}}-database:5432/{{ .Values.global.secrets.databaseName}}"
            {{- end }}

            - name: FLYWAY_BASELINE_ON_MIGRATE
              value: "true"
            - name: FLYWAY_DEFAULT_SCHEMA
              value: "pay_transparency"
            - name: FLYWAY_CONNECT_RETRIES
              value: "10"
      containers:
        - name: {{ include "backend.fullname" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "image-registry.openshift-image-registry.svc:5000/{{.Release.Namespace}}/{{ include "backend.fullname" . }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - secretRef:
                name: {{.Release.Name}}
            - configMapRef:
                name: {{.Release.Name}}
          env:
            {{- if .Values.global.crunchyEnabled }}
            #-- "crunchy" as a name is always added to the paths for secrets and pods , because the alias used in chart.yaml is crunchy, refer line #40 in Chart.yaml
            - name: POSTGRESQL_HOST
              valueFrom:
                secretKeyRef:
                  name: {{.Release.Name}}-crunchy-pguser-{{ .Values.global.secrets.databaseName }}
                  key: host
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  name: {{.Release.Name}}-crunchy-pguser-{{ .Values.global.secrets.databaseName }}
                  key: user
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{.Release.Name}}-crunchy-pguser-{{ .Values.global.secrets.databaseName }}
                  key: password
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{.Release.Name}}-crunchy-pguser-{{ .Values.global.secrets.databaseName }}
                  key: dbname
            {{- else }}
            #-- here all the secrets are auto-mounted from the global secrets, when crunchy is not enabled. refer secret.yaml line#14.
            - name: POSTGRESQL_HOST
              value: {{.Release.Name}}-database
            {{- end }}
            - name: NODE_ENV
              value: production
            - name: IS_RATE_LIMIT_ENABLED
              value: 'true'
            - name: RATE_LIMIT_WINDOW_MS
              value: '60000'
            - name: RATE_LIMIT_LIMIT
              value: '1000'
            {{- if .Values.global.serverFrontend }}
            - name: SERVER_FRONTEND
              value: {{ tpl .Values.global.serverFrontend $ }}
            {{- else }}
            - name: SERVER_FRONTEND
              value: https://{{.Release.Name}}-frontend.{{.Values.global.domain}}
            {{- end }}
            - name: LOG_LEVEL
              value: {{ .Values.app.env.logLevel }}
            - name: AUDIENCE
              value: https://{{.Release.Name}}-frontend.{{.Values.global.domain}}
            - name: ISSUER
              value: https://{{.Release.Name}}-backend.{{.Values.global.domain}}
            - name: SITEMINDER_LOGOUT_ENDPOINT
              value: {{ .Values.app.env.siteminderLogoutEndpoint }}
            - name: SESSION_PATH
              value: '/app/sessions'

          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 30
          livenessProbe:
            successThreshold: 1
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 60
            timeoutSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /app/sessions
              name: {{ include "backend.fullname" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
