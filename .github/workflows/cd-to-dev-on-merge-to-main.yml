name: Merge to Main
env:
  deployment_name: pay-transparency
on:
  workflow_run:
    workflows: [ "Pull Request Closed" ]
    types:
      - completed
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  codeql:
    name: Semantic Code Analysis
    runs-on: ubuntu-22.04
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v3

      - name: Initialize
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
      # If this step fails, then you should remove it and run the build manually (see below)
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
  

  deploys:
    name: Deploys
    environment: dev
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: generate private and public key
        id: generateKey
        shell: bash
        run: |
          EOF=" "
          ssh-keygen -t rsa -b 4096 -m PEM -f jwtRS256.key -q -N ""
          openssl rsa -in jwtRS256.key -pubout -outform PEM -out jwtRS256.key.pub
          UI_PRIVATE_KEY_VAL=$(cat jwtRS256.key)
          UI_PUBLIC_KEY_VAL=$(cat jwtRS256.key.pub)
          echo "UI_PUBLIC_KEY<<$EOF" >> $GITHUB_OUTPUT
          echo "$UI_PUBLIC_KEY_VAL" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT
          
          echo "UI_PRIVATE_KEY<<$EOF" >> $GITHUB_OUTPUT
          echo "$UI_PRIVATE_KEY_VAL" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT
      - name: Deploy to OpenShift
        shell: bash
        run: |
          # Allow pipefail, since we could be catching oc create errors
          set +o pipefail
          
          # Login to OpenShift (NOTE: project command is a safeguard)
          oc login --token=${{ secrets.oc_token }} --server=${{ vars.oc_server }}
          oc project ${{ vars.oc_namespace }}
          
          # Deploy Helm Chart
          helm upgrade --install --wait --atomic ${{ env.deployment_name }} --values charts/fin-pay-transparency/values.yaml  --set backend.image.tag=${{ github.sha }} --set frontend.image.tag=${{ github.sha }} --set database.image.tag=${{ github.sha }} --set global.zone=dev --set global.secrets.keycloakClientId="${{ secrets.KEYCLOAK_CLIENT_ID }}" --set global.secrets.keycloakClientSecret="${{ secrets.KEYCLOAK_CLIENT_SECRET }}" --set global.secrets.keycloakUrl="${{ secrets.KEYCLOAK_URL }}" --set global.secrets.uiPrivateKey="${{ steps.generateKey.outputs.UI_PRIVATE_KEY }}" --set global.secrets.uiPublicKey="${{ steps.generateKey.outputs.UI_PUBLIC_KEY }}" --timeout 10m charts/fin-pay-transparency
  
      - name: Penetration Test
        uses: zaproxy/action-full-scan@v0.6.0
        with:
          target: https://${{ env.deployment_name }}-frontend-dev.apps.silver.devops.gov.bc.ca
          cmd_options: "-a"
          fail_action: false
          allow_issue_writing: false   
