name: Build And Deploy to Sandbox in Dev namespace

on:
  pull_request:

concurrency:
  # PR open and close use the same group, allowing only one at a time
  group: pr-${{ github.workflow }}-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  builds:
    name: Build Containers for OpenShift Deployment
    runs-on: ubuntu-22.04
    permissions:
      packages: write
    strategy:
      matrix:
        package: [backend, database, database-migrations, frontend]
        include:
          - package: backend
            triggers: ('backend/')
            build_file: ./backend/Dockerfile
            build_context: ./backend
          - package: database
            triggers: ('database/')
            build_file: ./database/Dockerfile
            build_context: ./database
          - package: frontend
            triggers: ('frontend/')
            build_file: ./frontend/Dockerfile
            build_context: ./frontend
          - package: database-migrations
            triggers: ('backend/db')
            build_file: ./backend/db/Dockerfile
            build_context: ./backend/db

    steps:
      - uses: actions/checkout@v3
      - uses: bcgov-nr/action-builder-ghcr@v1.1.2
        with:
          package: ${{ matrix.package }}
          tag: ${{ github.event.number }}
          tag_fallback: test
          token: ${{ secrets.GITHUB_TOKEN }}
          triggers: ${{ matrix.triggers }}
          build_file: ${{ matrix.build_file }}
          build_context: ${{ matrix.build_context }}

  deploy-backend:
    name: Deploy Backend Container to OpenShift
    environment: dev
    needs:
      - builds
    runs-on: ubuntu-22.04
    steps:
      - uses: bcgov-nr/action-deployer-openshift@v1.1.1
        with:
          file: backend/openshift.deploy.yml
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          parameters:
            -p ZONE=${{ github.event.number }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/${{ matrix.name }}:${{ github.event.number }}
            -p PROMOTE_MIGRATION=${{ github.repository }}/database-migrations:${{ github.event.number }} -p KEYCLOAK_CLIENT_ID=${{ secrets.KEYCLOAK_CLIENT_ID }} -p KEYCLOAK_CLIENT_SECRET=${{ secrets.KEYCLOAK_CLIENT_SECRET }} -p KEYCLOAK_URL=${{ secrets.KEYCLOAK_URL }}
          triggers: ('database/', 'backend/', 'frontend/')
          verification_path: /api
  
  deploys:
    name: Deploy Containers to OpenShift
    environment: dev
    needs:
      - builds
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        name: [database, init, frontend]
        include:
          - name: database
            file: database/openshift.deploy.yml
            overwrite: false
          - name: frontend
            file: frontend/openshift.deploy.yml
            overwrite: true
            parameters: -p MIN_REPLICAS=1 -p MAX_REPLICAS=2
            triggers: ('database/', 'backend/', 'frontend/')
          - name: init
            file: common/openshift.init.yml
            overwrite: false
    steps:
      - uses: bcgov-nr/action-deployer-openshift@v1.1.1
        with:
          file: ${{ matrix.file }}
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: ${{ matrix.overwrite }}
          parameters:
            -p ZONE=${{ github.event.number }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/${{ matrix.name }}:${{ github.event.number }}
            ${{ matrix.parameters }}
          triggers: ${{ matrix.triggers }}
          verification_path: ${{ matrix.verification_path }}
